Archive member included because of file (symbol)

C:/Program Files (x86)/Rowley Associates Limited/CrossWorks for ARM 2.1/lib/libdebugio_v7m_t_le.a(libdebugio_asm.o)
                              (__do_debug_operation_bkpt)
C:/Program Files (x86)/Rowley Associates Limited/CrossWorks for ARM 2.1/lib/libc_user_libc_v7m_t_le.a(user_libc.o)
                              C:/Program Files (x86)/Rowley Associates Limited/CrossWorks for ARM 2.1/lib/libdebugio_v7m_t_le.a(libdebugio_asm.o) (__debug_io_lock)

Discarded input sections

 .text          0x00000000        0x0 THUMB Debug/../../obj/hooks.o
 .data          0x00000000        0x0 THUMB Debug/../../obj/hooks.o
 .bss           0x00000000        0x0 THUMB Debug/../../obj/hooks.o
 .text          0x00000000        0x0 THUMB Debug/../../obj/main.o
 .data          0x00000000        0x0 THUMB Debug/../../obj/main.o
 .bss           0x00000000        0x0 THUMB Debug/../../obj/main.o
 .text          0x00000000        0x0 THUMB Debug/../../obj/cstart.o
 .data          0x00000000        0x0 THUMB Debug/../../obj/cstart.o
 .bss           0x00000000        0x0 THUMB Debug/../../obj/cstart.o
 .stack         0x00000000        0x0 THUMB Debug/../../obj/cstart.o
 .stack_process
                0x00000000        0x0 THUMB Debug/../../obj/cstart.o
 .heap          0x00000000        0x0 THUMB Debug/../../obj/cstart.o
 .text          0x00000000        0x0 THUMB Debug/../../obj/vectors.o
 .data          0x00000000        0x0 THUMB Debug/../../obj/vectors.o
 .bss           0x00000000        0x0 THUMB Debug/../../obj/vectors.o
 .text          0x00000000        0x0 THUMB Debug/../../obj/can.o
 .data          0x00000000        0x0 THUMB Debug/../../obj/can.o
 .bss           0x00000000        0x0 THUMB Debug/../../obj/can.o
 .text          0x00000000        0x0 THUMB Debug/../../obj/cpu.o
 .data          0x00000000        0x0 THUMB Debug/../../obj/cpu.o
 .bss           0x00000000        0x0 THUMB Debug/../../obj/cpu.o
 .text          0x00000000        0x0 THUMB Debug/../../obj/nvm.o
 .data          0x00000000        0x0 THUMB Debug/../../obj/nvm.o
 .bss           0x00000000        0x0 THUMB Debug/../../obj/nvm.o
 .text          0x00000000        0x0 THUMB Debug/../../obj/timer.o
 .data          0x00000000        0x0 THUMB Debug/../../obj/timer.o
 .bss           0x00000000        0x0 THUMB Debug/../../obj/timer.o
 .text.TimerSet
                0x00000000        0xc THUMB Debug/../../obj/timer.o
 .text          0x00000000        0x0 THUMB Debug/../../obj/uart.o
 .data          0x00000000        0x0 THUMB Debug/../../obj/uart.o
 .bss           0x00000000        0x0 THUMB Debug/../../obj/uart.o
 .text          0x00000000        0x0 THUMB Debug/../../obj/flash.o
 .data          0x00000000        0x0 THUMB Debug/../../obj/flash.o
 .bss           0x00000000        0x0 THUMB Debug/../../obj/flash.o
 .text          0x00000000        0x0 THUMB Debug/../../obj/assert.o
 .data          0x00000000        0x0 THUMB Debug/../../obj/assert.o
 .bss           0x00000000        0x0 THUMB Debug/../../obj/assert.o
 .text          0x00000000        0x0 THUMB Debug/../../obj/backdoor.o
 .data          0x00000000        0x0 THUMB Debug/../../obj/backdoor.o
 .bss           0x00000000        0x0 THUMB Debug/../../obj/backdoor.o
 .text          0x00000000        0x0 THUMB Debug/../../obj/boot.o
 .data          0x00000000        0x0 THUMB Debug/../../obj/boot.o
 .bss           0x00000000        0x0 THUMB Debug/../../obj/boot.o
 .text          0x00000000        0x0 THUMB Debug/../../obj/com.o
 .data          0x00000000        0x0 THUMB Debug/../../obj/com.o
 .bss           0x00000000        0x0 THUMB Debug/../../obj/com.o
 .text.ComIsConnectEntryState
                0x00000000        0xc THUMB Debug/../../obj/com.o
 .text          0x00000000        0x0 THUMB Debug/../../obj/cop.o
 .data          0x00000000        0x0 THUMB Debug/../../obj/cop.o
 .bss           0x00000000        0x0 THUMB Debug/../../obj/cop.o
 .text          0x00000000        0x0 THUMB Debug/../../obj/xcp.o
 .data          0x00000000        0x0 THUMB Debug/../../obj/xcp.o
 .bss           0x00000000        0x0 THUMB Debug/../../obj/xcp.o
 .text.libdebugio
                0x00000000        0x0 C:/Program Files (x86)/Rowley Associates Limited/CrossWorks for ARM 2.1/lib/libdebugio_v7m_t_le.a(libdebugio_asm.o)
 .data.libdebugio
                0x00000000        0x0 C:/Program Files (x86)/Rowley Associates Limited/CrossWorks for ARM 2.1/lib/libdebugio_v7m_t_le.a(libdebugio_asm.o)
 .bss.libdebugio
                0x00000000        0x0 C:/Program Files (x86)/Rowley Associates Limited/CrossWorks for ARM 2.1/lib/libdebugio_v7m_t_le.a(libdebugio_asm.o)
 .text.libc.debug_printf
                0x00000000       0x14 C:/Program Files (x86)/Rowley Associates Limited/CrossWorks for ARM 2.1/lib/libdebugio_v7m_t_le.a(libdebugio_asm.o)
 .text.libc.debug_fprintf
                0x00000000       0x14 C:/Program Files (x86)/Rowley Associates Limited/CrossWorks for ARM 2.1/lib/libdebugio_v7m_t_le.a(libdebugio_asm.o)
 .text.libc.debug_scanf
                0x00000000       0x24 C:/Program Files (x86)/Rowley Associates Limited/CrossWorks for ARM 2.1/lib/libdebugio_v7m_t_le.a(libdebugio_asm.o)
 .text.libc.debug_fscanf
                0x00000000       0x24 C:/Program Files (x86)/Rowley Associates Limited/CrossWorks for ARM 2.1/lib/libdebugio_v7m_t_le.a(libdebugio_asm.o)
 .text          0x00000000        0x0 C:/Program Files (x86)/Rowley Associates Limited/CrossWorks for ARM 2.1/lib/libc_user_libc_v7m_t_le.a(user_libc.o)
 .data          0x00000000        0x0 C:/Program Files (x86)/Rowley Associates Limited/CrossWorks for ARM 2.1/lib/libc_user_libc_v7m_t_le.a(user_libc.o)
 .bss           0x00000000        0x0 C:/Program Files (x86)/Rowley Associates Limited/CrossWorks for ARM 2.1/lib/libc_user_libc_v7m_t_le.a(user_libc.o)
 .text.libc     0x00000000        0x0 C:/Program Files (x86)/Rowley Associates Limited/CrossWorks for ARM 2.1/lib/libc_user_libc_v7m_t_le.a(user_libc.o)
 .text.libc.__errno
                0x00000000        0xc C:/Program Files (x86)/Rowley Associates Limited/CrossWorks for ARM 2.1/lib/libc_user_libc_v7m_t_le.a(user_libc.o)
 .text.libc.__heap_lock
                0x00000000        0x4 C:/Program Files (x86)/Rowley Associates Limited/CrossWorks for ARM 2.1/lib/libc_user_libc_v7m_t_le.a(user_libc.o)
 .text.libc.__heap_unlock
                0x00000000        0x4 C:/Program Files (x86)/Rowley Associates Limited/CrossWorks for ARM 2.1/lib/libc_user_libc_v7m_t_le.a(user_libc.o)
 .text.libc.__printf_lock
                0x00000000        0x4 C:/Program Files (x86)/Rowley Associates Limited/CrossWorks for ARM 2.1/lib/libc_user_libc_v7m_t_le.a(user_libc.o)
 .text.libc.__printf_unlock
                0x00000000        0x4 C:/Program Files (x86)/Rowley Associates Limited/CrossWorks for ARM 2.1/lib/libc_user_libc_v7m_t_le.a(user_libc.o)
 .text.libc.__scanf_lock
                0x00000000        0x4 C:/Program Files (x86)/Rowley Associates Limited/CrossWorks for ARM 2.1/lib/libc_user_libc_v7m_t_le.a(user_libc.o)
 .text.libc.__scanf_unlock
                0x00000000        0x4 C:/Program Files (x86)/Rowley Associates Limited/CrossWorks for ARM 2.1/lib/libc_user_libc_v7m_t_le.a(user_libc.o)
 .bss.libc.errno
                0x00000000        0x4 C:/Program Files (x86)/Rowley Associates Limited/CrossWorks for ARM 2.1/lib/libc_user_libc_v7m_t_le.a(user_libc.o)

Memory Configuration

Name             Origin             Length             Attributes
UNPLACED_SECTIONS 0xffffffff         0x00000000         xw
FLASH            0x08000000         0x00004000         xr
RAM              0x20000000         0x00001800         xw
USB_CAN_RAM      0x40006000         0x00000200         xw
CM3_System_Control_Space 0xe000e000         0x00001000         xw
*default*        0x00000000         0xffffffff

Linker script and memory map

                0x08000d70                __do_debug_operation = __do_debug_operation_bkpt
                0x08000000                __FLASH_segment_start__ = 0x8000000
                0x08004000                __FLASH_segment_end__ = 0x8004000
                0x20000000                __RAM_segment_start__ = 0x20000000
                0x20001800                __RAM_segment_end__ = 0x20001800
                0x40006000                __USB_CAN_RAM_segment_start__ = 0x40006000
                0x40006200                __USB_CAN_RAM_segment_end__ = 0x40006200
                0xe000e000                __CM3_System_Control_Space_segment_start__ = 0xe000e000
                0xe000f000                __CM3_System_Control_Space_segment_end__ = 0xe000f000
                0x00000100                __STACKSIZE__ = 0x100
                0x00000000                __STACKSIZE_PROCESS__ = 0x0
                0x00000000                __STACKSIZE_IRQ__ = 0x0
                0x00000000                __STACKSIZE_FIQ__ = 0x0
                0x00000000                __STACKSIZE_SVC__ = 0x0
                0x00000000                __STACKSIZE_ABT__ = 0x0
                0x00000000                __STACKSIZE_UND__ = 0x0
                0x00000080                __HEAPSIZE__ = 0x80
                0x20000000                __vectors_ram_load_start__ = ALIGN (__RAM_segment_start__, 0x100)

.vectors_ram    0x20000000        0x0
                0x20000000                __vectors_ram_start__ = .
 *(.vectors_ram .vectors_ram.*)
                0x20000000                __vectors_ram_end__ = (__vectors_ram_start__ + SIZEOF (.vectors_ram))
                0x20000000                __vectors_ram_load_end__ = __vectors_ram_end__
                0x00000001                . = ASSERT (((__vectors_ram_end__ >= __RAM_segment_start__) && (__vectors_ram_end__ <= (__RAM_segment_start__ + 0x5000))), error: .vectors_ram is too large to fit in RAM memory segment)
                0x08000000                __vectors_load_start__ = ALIGN (__FLASH_segment_start__, 0x100)

.vectors        0x08000000      0x150
                0x08000000                __vectors_start__ = .
 *(.vectors .vectors.*)
 .vectors       0x08000000      0x150 THUMB Debug/../../obj/vectors.o
                0x08000000                _vectors
                0x08000150                __vectors_end__ = (__vectors_start__ + SIZEOF (.vectors))
                0x08000150                __vectors_load_end__ = __vectors_end__
                0x00000001                . = ASSERT (((__vectors_end__ >= __FLASH_segment_start__) && (__vectors_end__ <= (__FLASH_segment_start__ + 0x20000))), error: .vectors is too large to fit in FLASH memory segment)
                0x08000150                __init_load_start__ = ALIGN (__vectors_end__, 0x4)

.init           0x08000150      0x198
                0x08000150                __init_start__ = .
 *(.init .init.*)
 .init          0x08000150      0x198 THUMB Debug/../../obj/cstart.o
                0x08000150                EntryFromProg
                0x080001da                reset_handler
                0x0800025a                exit
                0x080002e8                __init_end__ = (__init_start__ + SIZEOF (.init))
                0x080002e8                __init_load_end__ = __init_end__
                0x00000001                . = ASSERT (((__init_end__ >= __FLASH_segment_start__) && (__init_end__ <= (__FLASH_segment_start__ + 0x20000))), error: .init is too large to fit in FLASH memory segment)
                0x080002e8                __text_load_start__ = ALIGN (__init_end__, 0x4)

.text           0x080002e8      0xaa8
                0x080002e8                __text_start__ = .
 *(.text .text.* .glue_7t .glue_7 .gnu.linkonce.t.* .gcc_except_table .ARM.extab* .gnu.linkonce.armextab.*)
 .glue_7        0x00000000        0x0 linker stubs
 .glue_7t       0x00000000        0x0 linker stubs
 .text.startup.main
                0x080002e8      0x12c THUMB Debug/../../obj/main.o
                0x080002e8                main
 .text.UnusedISR
                0x08000414        0xc THUMB Debug/../../obj/vectors.o
                0x08000414                UnusedISR
 .text.CpuStartUserProgram
                0x08000420       0x24 THUMB Debug/../../obj/cpu.o
                0x08000420                CpuStartUserProgram
 .text.CpuMemCopy
                0x08000444       0x20 THUMB Debug/../../obj/cpu.o
                0x08000444                CpuMemCopy
 .text.CpuReset
                0x08000464        0x4 THUMB Debug/../../obj/cpu.o
                0x08000464                CpuReset
 .text.NvmInit  0x08000468        0x4 THUMB Debug/../../obj/nvm.o
                0x08000468                NvmInit
 .text.NvmWrite
                0x0800046c        0x4 THUMB Debug/../../obj/nvm.o
                0x0800046c                NvmWrite
 .text.NvmErase
                0x08000470        0x4 THUMB Debug/../../obj/nvm.o
                0x08000470                NvmErase
 .text.NvmVerifyChecksum
                0x08000474        0x4 THUMB Debug/../../obj/nvm.o
                0x08000474                NvmVerifyChecksum
 .text.NvmDone  0x08000478       0x14 THUMB Debug/../../obj/nvm.o
                0x08000478                NvmDone
 .text.TimerInit
                0x0800048c       0x24 THUMB Debug/../../obj/timer.o
                0x0800048c                TimerInit
 .text.TimerReset
                0x080004b0        0xc THUMB Debug/../../obj/timer.o
                0x080004b0                TimerReset
 .text.TimerUpdate
                0x080004bc       0x1c THUMB Debug/../../obj/timer.o
                0x080004bc                TimerUpdate
 .text.TimerGet
                0x080004d8       0x14 THUMB Debug/../../obj/timer.o
                0x080004d8                TimerGet
 .text.UartInit
                0x080004ec       0x28 THUMB Debug/../../obj/uart.o
                0x080004ec                UartInit
 .text.UartTransmitPacket
                0x08000514       0x7c THUMB Debug/../../obj/uart.o
                0x08000514                UartTransmitPacket
 .text.UartReceivePacket
                0x08000590       0x6c THUMB Debug/../../obj/uart.o
                0x08000590                UartReceivePacket
 .text.FlashLock
                0x080005fc       0x10 THUMB Debug/../../obj/flash.o
 .text.FlashGetSector
                0x0800060c       0x38 THUMB Debug/../../obj/flash.o
 .text.FlashWriteBlock
                0x08000644       0xa0 THUMB Debug/../../obj/flash.o
 .text.FlashSwitchBlock
                0x080006e4       0x54 THUMB Debug/../../obj/flash.o
 .text.FlashAddToBlock
                0x08000738       0x8a THUMB Debug/../../obj/flash.o
 *fill*         0x080007c2        0x2 00
 .text.FlashInit
                0x080007c4       0x18 THUMB Debug/../../obj/flash.o
                0x080007c4                FlashInit
 .text.FlashWrite
                0x080007dc       0x4c THUMB Debug/../../obj/flash.o
                0x080007dc                FlashWrite
 .text.FlashErase
                0x08000828      0x13c THUMB Debug/../../obj/flash.o
                0x08000828                FlashErase
 .text.FlashVerifyChecksum
                0x08000964       0x54 THUMB Debug/../../obj/flash.o
                0x08000964                FlashVerifyChecksum
 .text.FlashWriteChecksum
                0x080009b8       0x44 THUMB Debug/../../obj/flash.o
                0x080009b8                FlashWriteChecksum
 .text.FlashDone
                0x080009fc       0x34 THUMB Debug/../../obj/flash.o
                0x080009fc                FlashDone
 .text.AssertFailure
                0x08000a30       0x18 THUMB Debug/../../obj/assert.o
                0x08000a30                AssertFailure
 .text.BackDoorCheck
                0x08000a48       0x30 THUMB Debug/../../obj/backdoor.o
                0x08000a48                BackDoorCheck
 .text.BackDoorInit
                0x08000a78       0x18 THUMB Debug/../../obj/backdoor.o
                0x08000a78                BackDoorInit
 .text.BootInit
                0x08000a90       0x16 THUMB Debug/../../obj/boot.o
                0x08000a90                BootInit
 .text.BootTask
                0x08000aa6       0x12 THUMB Debug/../../obj/boot.o
                0x08000aa6                BootTask
 .text.ComInit  0x08000ab8       0x2c THUMB Debug/../../obj/com.o
                0x08000ab8                ComInit
 .text.ComTask  0x08000ae4       0x20 THUMB Debug/../../obj/com.o
                0x08000ae4                ComTask
 .text.ComTransmitPacket
                0x08000b04       0x10 THUMB Debug/../../obj/com.o
                0x08000b04                ComTransmitPacket
 .text.ComSetConnectEntryState
                0x08000b14        0xc THUMB Debug/../../obj/com.o
                0x08000b14                ComSetConnectEntryState
 .text.ComIsConnected
                0x08000b20        0x4 THUMB Debug/../../obj/com.o
                0x08000b20                ComIsConnected
 .text.CopInit  0x08000b24        0x2 THUMB Debug/../../obj/cop.o
                0x08000b24                CopInit
 .text.CopService
                0x08000b26        0x2 THUMB Debug/../../obj/cop.o
                0x08000b26                CopService
 .text.XcpSetCtoError
                0x08000b28       0x14 THUMB Debug/../../obj/xcp.o
 .text.XcpInit  0x08000b3c       0x1c THUMB Debug/../../obj/xcp.o
                0x08000b3c                XcpInit
 .text.XcpIsConnected
                0x08000b58       0x10 THUMB Debug/../../obj/xcp.o
                0x08000b58                XcpIsConnected
 .text.XcpPacketTransmitted
                0x08000b68       0x10 THUMB Debug/../../obj/xcp.o
                0x08000b68                XcpPacketTransmitted
 .text.XcpPacketReceived
                0x08000b78      0x1f8 THUMB Debug/../../obj/xcp.o
                0x08000b78                XcpPacketReceived
 .text.libdebugio_bkpt.__do_debug_operation_bkpt
                0x08000d70       0x18 C:/Program Files (x86)/Rowley Associates Limited/CrossWorks for ARM 2.1/lib/libdebugio_v7m_t_le.a(libdebugio_asm.o)
                0x08000d70                __do_debug_operation_bkpt
 .text.libc.__debug_io_lock
                0x08000d88        0x4 C:/Program Files (x86)/Rowley Associates Limited/CrossWorks for ARM 2.1/lib/libc_user_libc_v7m_t_le.a(user_libc.o)
                0x08000d88                __debug_io_lock
 .text.libc.__debug_io_unlock
                0x08000d8c        0x4 C:/Program Files (x86)/Rowley Associates Limited/CrossWorks for ARM 2.1/lib/libc_user_libc_v7m_t_le.a(user_libc.o)
                0x08000d8c                __debug_io_unlock
                0x08000d90                __text_end__ = (__text_start__ + SIZEOF (.text))
                0x08000d90                __text_load_end__ = __text_end__

.vfp11_veneer   0x00000000        0x0
 .vfp11_veneer  0x00000000        0x0 linker stubs

.v4_bx          0x00000000        0x0
 .v4_bx         0x00000000        0x0 linker stubs
                0x00000001                . = ASSERT (((__text_end__ >= __FLASH_segment_start__) && (__text_end__ <= (__FLASH_segment_start__ + 0x20000))), error: .text is too large to fit in FLASH memory segment)
                0x08000d90                __dtors_load_start__ = ALIGN (__text_end__, 0x4)

.dtors          0x08000d90        0x0
                0x08000d90                __dtors_start__ = .
 *(SORT(.dtors.*))
 *(.dtors)
 *(.fini_array .fini_array.*)
                0x08000d90                __dtors_end__ = (__dtors_start__ + SIZEOF (.dtors))
                0x08000d90                __dtors_load_end__ = __dtors_end__
                0x00000001                . = ASSERT (((__dtors_end__ >= __FLASH_segment_start__) && (__dtors_end__ <= (__FLASH_segment_start__ + 0x20000))), error: .dtors is too large to fit in FLASH memory segment)
                0x08000d90                __ctors_load_start__ = ALIGN (__dtors_end__, 0x4)

.ctors          0x08000d90        0x0
                0x08000d90                __ctors_start__ = .
 *(SORT(.ctors.*))
 *(.ctors)
 *(.init_array .init_array.*)
                0x08000d90                __ctors_end__ = (__ctors_start__ + SIZEOF (.ctors))
                0x08000d90                __ctors_load_end__ = __ctors_end__
                0x00000001                . = ASSERT (((__ctors_end__ >= __FLASH_segment_start__) && (__ctors_end__ <= (__FLASH_segment_start__ + 0x20000))), error: .ctors is too large to fit in FLASH memory segment)
                0x08000d90                __rodata_load_start__ = ALIGN (__ctors_end__, 0x4)

.rodata         0x08000d90      0x23c
                0x08000d90                __rodata_start__ = .
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata.str1.1
                0x08000d90       0x67 THUMB Debug/../../obj/main.o
 .rodata.str1.1
                0x08000df7       0x92 THUMB Debug/../../obj/vectors.o
 .rodata.str1.1
                0x08000e89       0x84 THUMB Debug/../../obj/uart.o
 *fill*         0x08000f0d        0x3 00
 .rodata.flashLayout
                0x08000f10       0xb4 THUMB Debug/../../obj/flash.o
 .rodata.xcpStationId
                0x08000fc4        0x8 THUMB Debug/../../obj/xcp.o
                0x08000fcc                __rodata_end__ = (__rodata_start__ + SIZEOF (.rodata))
                0x08000fcc                __rodata_load_end__ = __rodata_end__
                0x00000001                . = ASSERT (((__rodata_end__ >= __FLASH_segment_start__) && (__rodata_end__ <= (__FLASH_segment_start__ + 0x20000))), error: .rodata is too large to fit in FLASH memory segment)
                0x08000fcc                __ARM.exidx_load_start__ = ALIGN (__rodata_end__, 0x4)

.ARM.exidx      0x08000fcc        0x0
                0x08000fcc                __ARM.exidx_start__ = .
                0x08000fcc                __exidx_start = __ARM.exidx_start__
 *(.ARM.exidx .ARM.exidx.*)
                0x08000fcc                __ARM.exidx_end__ = (__ARM.exidx_start__ + SIZEOF (.ARM.exidx))
                0x08000fcc                __exidx_end = __ARM.exidx_end__
                0x08000fcc                __ARM.exidx_load_end__ = __ARM.exidx_end__
                0x00000001                . = ASSERT (((__ARM.exidx_end__ >= __FLASH_segment_start__) && (__ARM.exidx_end__ <= (__FLASH_segment_start__ + 0x20000))), error: .ARM.exidx is too large to fit in FLASH memory segment)
                0x08000fcc                __fast_load_start__ = ALIGN (__ARM.exidx_end__, 0x4)

.fast           0x20000000        0x0 load address 0x08000fcc
                0x20000000                __fast_start__ = .
 *(.fast .fast.*)
                0x20000000                __fast_end__ = (__fast_start__ + SIZEOF (.fast))
                0x08000fcc                __fast_load_end__ = (__fast_load_start__ + SIZEOF (.fast))
                0x00000001                . = ASSERT ((((__fast_load_start__ + SIZEOF (.fast)) >= __FLASH_segment_start__) && ((__fast_load_start__ + SIZEOF (.fast)) <= (__FLASH_segment_start__ + 0x20000))), error: .fast is too large to fit in FLASH memory segment)

.fast_run       0x20000000        0x0
                0x20000000                __fast_run_start__ = .
                0x20000000                . = MAX ((__fast_run_start__ + SIZEOF (.fast)), .)
                0x20000000                __fast_run_end__ = (__fast_run_start__ + SIZEOF (.fast_run))
                0x20000000                __fast_run_load_end__ = __fast_run_end__
                0x00000001                . = ASSERT (((__fast_run_end__ >= __RAM_segment_start__) && (__fast_run_end__ <= (__RAM_segment_start__ + 0x5000))), error: .fast_run is too large to fit in RAM memory segment)
                0x08000fcc                __data_load_start__ = ALIGN ((__fast_load_start__ + SIZEOF (.fast)), 0x4)

.data           0x20000000        0x0 load address 0x08000fcc
                0x20000000                __data_start__ = .
 *(.data .data.* .gnu.linkonce.d.*)
                0x20000000                __data_end__ = (__data_start__ + SIZEOF (.data))
                0x08000fcc                __data_load_end__ = (__data_load_start__ + SIZEOF (.data))
                0x00000001                . = ASSERT ((((__data_load_start__ + SIZEOF (.data)) >= __FLASH_segment_start__) && ((__data_load_start__ + SIZEOF (.data)) <= (__FLASH_segment_start__ + 0x20000))), error: .data is too large to fit in FLASH memory segment)

.data_run       0x20000000        0x0
                0x20000000                __data_run_start__ = .
                0x20000000                . = MAX ((__data_run_start__ + SIZEOF (.data)), .)
                0x20000000                __data_run_end__ = (__data_run_start__ + SIZEOF (.data_run))
                0x20000000                __data_run_load_end__ = __data_run_end__
                0x00000001                . = ASSERT (((__data_run_end__ >= __RAM_segment_start__) && (__data_run_end__ <= (__RAM_segment_start__ + 0x5000))), error: .data_run is too large to fit in RAM memory segment)
                0x20000000                __bss_load_start__ = ALIGN (__data_run_end__, 0x4)

.bss            0x20000000      0x4e8
                0x20000000                __bss_start__ = .
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss.millisecond_counter
                0x20000000        0x2 THUMB Debug/../../obj/timer.o
 .bss.xcpCtoReqPacket.876
                0x20000002       0x41 THUMB Debug/../../obj/uart.o
 .bss.xcpCtoRxInProgress.878
                0x20000043        0x1 THUMB Debug/../../obj/uart.o
 .bss.xcpCtoRxLength.877
                0x20000044        0x1 THUMB Debug/../../obj/uart.o
 *fill*         0x20000045        0x3 00
 .bss.bootBlockInfo
                0x20000048      0x204 THUMB Debug/../../obj/flash.o
 .bss.blockInfo
                0x2000024c      0x204 THUMB Debug/../../obj/flash.o
 .bss.assert_failure_file
                0x20000450        0x4 THUMB Debug/../../obj/assert.o
 .bss.assert_failure_line
                0x20000454        0x4 THUMB Debug/../../obj/assert.o
 .bss.backdoorOpen
                0x20000458        0x1 THUMB Debug/../../obj/backdoor.o
 .bss.comEntryStateConnect
                0x20000459        0x1 THUMB Debug/../../obj/com.o
 .bss.xcpCtoReqPacket.855
                0x2000045a       0x40 THUMB Debug/../../obj/com.o
 *fill*         0x2000049a        0x2 00
 .bss.xcpInfo   0x2000049c       0x4c THUMB Debug/../../obj/xcp.o
 *(COMMON)
                0x200004e8                __bss_end__ = (__bss_start__ + SIZEOF (.bss))
                0x200004e8                __bss_load_end__ = __bss_end__
                0x00000001                . = ASSERT (((__bss_end__ >= __RAM_segment_start__) && (__bss_end__ <= (__RAM_segment_start__ + 0x5000))), error: .bss is too large to fit in RAM memory segment)
                0x200004e8                __non_init_load_start__ = ALIGN (__bss_end__, 0x4)

.non_init       0x200004e8        0x0
                0x200004e8                __non_init_start__ = .
 *(.non_init .non_init.*)
                0x200004e8                __non_init_end__ = (__non_init_start__ + SIZEOF (.non_init))
                0x200004e8                __non_init_load_end__ = __non_init_end__
                0x00000001                . = ASSERT (((__non_init_end__ >= __RAM_segment_start__) && (__non_init_end__ <= (__RAM_segment_start__ + 0x5000))), error: .non_init is too large to fit in RAM memory segment)
                0x200004e8                __heap_load_start__ = ALIGN (__non_init_end__, 0x4)

.heap           0x200004e8       0x80
                0x200004e8                __heap_start__ = .
 *(.heap .heap.*)
                0x20000568                . = ALIGN (MAX ((__heap_start__ + __HEAPSIZE__), .), 0x4)
 *fill*         0x200004e8       0x80 00
                0x20000568                __heap_end__ = (__heap_start__ + SIZEOF (.heap))
                0x20000568                __heap_load_end__ = __heap_end__
                0x00000001                . = ASSERT (((__heap_end__ >= __RAM_segment_start__) && (__heap_end__ <= (__RAM_segment_start__ + 0x5000))), error: .heap is too large to fit in RAM memory segment)
                0x20000568                __stack_load_start__ = ALIGN (__heap_end__, 0x4)

.stack          0x20000568      0x100
                0x20000568                __stack_start__ = .
 *(.stack .stack.*)
                0x20000668                . = ALIGN (MAX ((__stack_start__ + __STACKSIZE__), .), 0x4)
 *fill*         0x20000568      0x100 00
                0x20000668                __stack_end__ = (__stack_start__ + SIZEOF (.stack))
                0x20000668                __stack_load_end__ = __stack_end__
                0x00000001                . = ASSERT (((__stack_end__ >= __RAM_segment_start__) && (__stack_end__ <= (__RAM_segment_start__ + 0x5000))), error: .stack is too large to fit in RAM memory segment)
                0x20000668                __stack_process_load_start__ = ALIGN (__stack_end__, 0x4)

.stack_process  0x20000668        0x0
                0x20000668                __stack_process_start__ = .
 *(.stack_process .stack_process.*)
                0x20000668                . = ALIGN (MAX ((__stack_process_start__ + __STACKSIZE_PROCESS__), .), 0x4)
                0x20000668                __stack_process_end__ = (__stack_process_start__ + SIZEOF (.stack_process))
                0x20000668                __stack_process_load_end__ = __stack_process_end__
                0x00000001                . = ASSERT (((__stack_process_end__ >= __RAM_segment_start__) && (__stack_process_end__ <= (__RAM_segment_start__ + 0x5000))), error: .stack_process is too large to fit in RAM memory segment)
                0x20000668                __tbss_load_start__ = ALIGN (__stack_process_end__, 0x4)

.tbss           0x20000668        0x0
                0x20000668                __tbss_start__ = .
 *(.tbss .tbss.*)
                0x20000668                __tbss_end__ = (__tbss_start__ + SIZEOF (.tbss))
                0x20000668                __tbss_load_end__ = __tbss_end__
                0x00000001                . = ASSERT (((__tbss_end__ >= __RAM_segment_start__) && (__tbss_end__ <= (__RAM_segment_start__ + 0x5000))), error: .tbss is too large to fit in RAM memory segment)
                0x08000fcc                __tdata_load_start__ = ALIGN ((__data_load_start__ + SIZEOF (.data)), 0x4)

.tdata          0x20000668        0x0 load address 0x08000fcc
                0x20000668                __tdata_start__ = .
 *(.tdata .tdata.*)
                0x20000668                __tdata_end__ = (__tdata_start__ + SIZEOF (.tdata))
                0x08000fcc                __tdata_load_end__ = (__tdata_load_start__ + SIZEOF (.tdata))
                0x08000fcc                __FLASH_segment_used_end__ = (ALIGN ((__data_load_start__ + SIZEOF (.data)), 0x4) + SIZEOF (.tdata))
                0x00000001                . = ASSERT ((((__tdata_load_start__ + SIZEOF (.tdata)) >= __FLASH_segment_start__) && ((__tdata_load_start__ + SIZEOF (.tdata)) <= (__FLASH_segment_start__ + 0x20000))), error: .tdata is too large to fit in FLASH memory segment)

.tdata_run      0x20000668        0x0
                0x20000668                __tdata_run_start__ = .
                0x20000668                . = MAX ((__tdata_run_start__ + SIZEOF (.tdata)), .)
                0x20000668                __tdata_run_end__ = (__tdata_run_start__ + SIZEOF (.tdata_run))
                0x20000668                __tdata_run_load_end__ = __tdata_run_end__
                0x20000668                __RAM_segment_used_end__ = (ALIGN (__tbss_end__, 0x4) + SIZEOF (.tdata_run))
                0x00000001                . = ASSERT (((__tdata_run_end__ >= __RAM_segment_start__) && (__tdata_run_end__ <= (__RAM_segment_start__ + 0x5000))), error: .tdata_run is too large to fit in RAM memory segment)
START GROUP
LOAD THUMB Debug/../../obj/hooks.o
LOAD THUMB Debug/../../obj/main.o
LOAD THUMB Debug/../../obj/cstart.o
LOAD THUMB Debug/../../obj/vectors.o
LOAD THUMB Debug/../../obj/can.o
LOAD THUMB Debug/../../obj/cpu.o
LOAD THUMB Debug/../../obj/nvm.o
LOAD THUMB Debug/../../obj/timer.o
LOAD THUMB Debug/../../obj/uart.o
LOAD THUMB Debug/../../obj/flash.o
LOAD THUMB Debug/../../obj/assert.o
LOAD THUMB Debug/../../obj/backdoor.o
LOAD THUMB Debug/../../obj/boot.o
LOAD THUMB Debug/../../obj/com.o
LOAD THUMB Debug/../../obj/cop.o
LOAD THUMB Debug/../../obj/xcp.o
LOAD C:/Program Files (x86)/Rowley Associates Limited/CrossWorks for ARM 2.1/lib/libm_v7m_t_le.a
LOAD C:/Program Files (x86)/Rowley Associates Limited/CrossWorks for ARM 2.1/lib/libc_v7m_t_le.a
LOAD C:/Program Files (x86)/Rowley Associates Limited/CrossWorks for ARM 2.1/lib/libcpp_v7m_t_le.a
LOAD C:/Program Files (x86)/Rowley Associates Limited/CrossWorks for ARM 2.1/lib/libdebugio_v7m_t_le.a
LOAD C:/Program Files (x86)/Rowley Associates Limited/CrossWorks for ARM 2.1/lib/libc_targetio_impl_v7m_t_le.a
LOAD C:/Program Files (x86)/Rowley Associates Limited/CrossWorks for ARM 2.1/lib/libc_user_libc_v7m_t_le.a
END GROUP
OUTPUT(D:/usr/feaser/software/OpenBLT/Target/Demo/ARMCM3_STM32_Olimex_STM32P103_Crossworks/Boot/ide/../bin/openbtl_olimex_stm32p103.elf elf32-littlearm)

.debug_info     0x00000000     0x1fa0
 .debug_info    0x00000000       0x5e THUMB Debug/../../obj/hooks.o
 .debug_info    0x0000005e      0x32a THUMB Debug/../../obj/main.o
 .debug_info    0x00000388      0x114 THUMB Debug/../../obj/cstart.o
 .debug_info    0x0000049c       0xf4 THUMB Debug/../../obj/vectors.o
 .debug_info    0x00000590       0x5e THUMB Debug/../../obj/can.o
 .debug_info    0x000005ee      0x13d THUMB Debug/../../obj/cpu.o
 .debug_info    0x0000072b      0x15e THUMB Debug/../../obj/nvm.o
 .debug_info    0x00000889      0x187 THUMB Debug/../../obj/timer.o
 .debug_info    0x00000a10      0x300 THUMB Debug/../../obj/uart.o
 .debug_info    0x00000d10      0x7b4 THUMB Debug/../../obj/flash.o
 .debug_info    0x000014c4       0xe8 THUMB Debug/../../obj/assert.o
 .debug_info    0x000015ac       0xa8 THUMB Debug/../../obj/backdoor.o
 .debug_info    0x00001654       0x8c THUMB Debug/../../obj/boot.o
 .debug_info    0x000016e0      0x18e THUMB Debug/../../obj/com.o
 .debug_info    0x0000186e       0x8a THUMB Debug/../../obj/cop.o
 .debug_info    0x000018f8      0x5db THUMB Debug/../../obj/xcp.o
 .debug_info    0x00001ed3       0xcd C:/Program Files (x86)/Rowley Associates Limited/CrossWorks for ARM 2.1/lib/libc_user_libc_v7m_t_le.a(user_libc.o)

.debug_abbrev   0x00000000      0xcd8
 .debug_abbrev  0x00000000       0x2a THUMB Debug/../../obj/hooks.o
 .debug_abbrev  0x0000002a      0x109 THUMB Debug/../../obj/main.o
 .debug_abbrev  0x00000133       0x14 THUMB Debug/../../obj/cstart.o
 .debug_abbrev  0x00000147       0xc0 THUMB Debug/../../obj/vectors.o
 .debug_abbrev  0x00000207       0x2a THUMB Debug/../../obj/can.o
 .debug_abbrev  0x00000231       0xb1 THUMB Debug/../../obj/cpu.o
 .debug_abbrev  0x000002e2       0xbc THUMB Debug/../../obj/nvm.o
 .debug_abbrev  0x0000039e      0x13a THUMB Debug/../../obj/timer.o
 .debug_abbrev  0x000004d8      0x16d THUMB Debug/../../obj/uart.o
 .debug_abbrev  0x00000645      0x279 THUMB Debug/../../obj/flash.o
 .debug_abbrev  0x000008be       0x7e THUMB Debug/../../obj/assert.o
 .debug_abbrev  0x0000093c       0x5d THUMB Debug/../../obj/backdoor.o
 .debug_abbrev  0x00000999       0x41 THUMB Debug/../../obj/boot.o
 .debug_abbrev  0x000009da       0xcb THUMB Debug/../../obj/com.o
 .debug_abbrev  0x00000aa5       0x41 THUMB Debug/../../obj/cop.o
 .debug_abbrev  0x00000ae6      0x1cd THUMB Debug/../../obj/xcp.o
 .debug_abbrev  0x00000cb3       0x25 C:/Program Files (x86)/Rowley Associates Limited/CrossWorks for ARM 2.1/lib/libc_user_libc_v7m_t_le.a(user_libc.o)

.debug_line     0x00000000     0x12f0
 .debug_line    0x00000000       0x1d THUMB Debug/../../obj/hooks.o
 .debug_line    0x0000001d      0x1d6 THUMB Debug/../../obj/main.o
 .debug_line    0x000001f3      0x15c THUMB Debug/../../obj/cstart.o
 .debug_line    0x0000034f       0xf1 THUMB Debug/../../obj/vectors.o
 .debug_line    0x00000440       0x1d THUMB Debug/../../obj/can.o
 .debug_line    0x0000045d      0x113 THUMB Debug/../../obj/cpu.o
 .debug_line    0x00000570      0x133 THUMB Debug/../../obj/nvm.o
 .debug_line    0x000006a3      0x140 THUMB Debug/../../obj/timer.o
 .debug_line    0x000007e3      0x17d THUMB Debug/../../obj/uart.o
 .debug_line    0x00000960      0x2aa THUMB Debug/../../obj/flash.o
 .debug_line    0x00000c0a       0xde THUMB Debug/../../obj/assert.o
 .debug_line    0x00000ce8       0xfb THUMB Debug/../../obj/backdoor.o
 .debug_line    0x00000de3       0xbf THUMB Debug/../../obj/boot.o
 .debug_line    0x00000ea2      0x138 THUMB Debug/../../obj/com.o
 .debug_line    0x00000fda       0xb7 THUMB Debug/../../obj/cop.o
 .debug_line    0x00001091      0x1eb THUMB Debug/../../obj/xcp.o
 .debug_line    0x0000127c       0x74 C:/Program Files (x86)/Rowley Associates Limited/CrossWorks for ARM 2.1/lib/libc_user_libc_v7m_t_le.a(user_libc.o)

.debug_str      0x00000000     0x10d6
 .debug_str     0x00000000       0xfc THUMB Debug/../../obj/hooks.o
                                0x12c (size before relaxing)
 .debug_str     0x000000fc      0x162 THUMB Debug/../../obj/main.o
                                0x241 (size before relaxing)
 .debug_str     0x0000025e       0xc1 THUMB Debug/../../obj/vectors.o
                                0x190 (size before relaxing)
 .debug_str     0x0000031f       0x83 THUMB Debug/../../obj/can.o
                                0x147 (size before relaxing)
 .debug_str     0x000003a2       0xe5 THUMB Debug/../../obj/cpu.o
                                0x1b4 (size before relaxing)
 .debug_str     0x00000487       0xc0 THUMB Debug/../../obj/nvm.o
                                0x1ac (size before relaxing)
 .debug_str     0x00000547       0xef THUMB Debug/../../obj/timer.o
                                0x1c9 (size before relaxing)
 .debug_str     0x00000636      0x165 THUMB Debug/../../obj/uart.o
                                0x257 (size before relaxing)
 .debug_str     0x0000079b      0x28c THUMB Debug/../../obj/flash.o
                                0x3b8 (size before relaxing)
 .debug_str     0x00000a27       0xb8 THUMB Debug/../../obj/assert.o
                                0x191 (size before relaxing)
 .debug_str     0x00000adf       0xa3 THUMB Debug/../../obj/backdoor.o
                                0x170 (size before relaxing)
 .debug_str     0x00000b82       0x89 THUMB Debug/../../obj/boot.o
                                0x14d (size before relaxing)
 .debug_str     0x00000c0b      0x102 THUMB Debug/../../obj/com.o
                                0x1f9 (size before relaxing)
 .debug_str     0x00000d0d       0x89 THUMB Debug/../../obj/cop.o
                                0x14d (size before relaxing)
 .debug_str     0x00000d96      0x26e THUMB Debug/../../obj/xcp.o
                                0x36f (size before relaxing)
 .debug_str     0x00001004       0xd2 C:/Program Files (x86)/Rowley Associates Limited/CrossWorks for ARM 2.1/lib/libc_user_libc_v7m_t_le.a(user_libc.o)
                                 0xde (size before relaxing)

.comment        0x00000000       0x11
 .comment       0x00000000       0x11 THUMB Debug/../../obj/hooks.o
                                 0x12 (size before relaxing)
 .comment       0x00000000       0x12 THUMB Debug/../../obj/main.o
 .comment       0x00000000       0x12 THUMB Debug/../../obj/vectors.o
 .comment       0x00000000       0x12 THUMB Debug/../../obj/can.o
 .comment       0x00000000       0x12 THUMB Debug/../../obj/cpu.o
 .comment       0x00000000       0x12 THUMB Debug/../../obj/nvm.o
 .comment       0x00000000       0x12 THUMB Debug/../../obj/timer.o
 .comment       0x00000000       0x12 THUMB Debug/../../obj/uart.o
 .comment       0x00000000       0x12 THUMB Debug/../../obj/flash.o
 .comment       0x00000000       0x12 THUMB Debug/../../obj/assert.o
 .comment       0x00000000       0x12 THUMB Debug/../../obj/backdoor.o
 .comment       0x00000000       0x12 THUMB Debug/../../obj/boot.o
 .comment       0x00000000       0x12 THUMB Debug/../../obj/com.o
 .comment       0x00000000       0x12 THUMB Debug/../../obj/cop.o
 .comment       0x00000000       0x12 THUMB Debug/../../obj/xcp.o
 .comment       0x00000000       0x12 C:/Program Files (x86)/Rowley Associates Limited/CrossWorks for ARM 2.1/lib/libc_user_libc_v7m_t_le.a(user_libc.o)

.ARM.attributes
                0x00000000       0x10
 .ARM.attributes
                0x00000000       0x10 THUMB Debug/../../obj/hooks.o
 .ARM.attributes
                0x00000010       0x10 THUMB Debug/../../obj/main.o
 .ARM.attributes
                0x00000020       0x10 THUMB Debug/../../obj/cstart.o
 .ARM.attributes
                0x00000030       0x10 THUMB Debug/../../obj/vectors.o
 .ARM.attributes
                0x00000040       0x10 THUMB Debug/../../obj/can.o
 .ARM.attributes
                0x00000050       0x10 THUMB Debug/../../obj/cpu.o
 .ARM.attributes
                0x00000060       0x10 THUMB Debug/../../obj/nvm.o
 .ARM.attributes
                0x00000070       0x10 THUMB Debug/../../obj/timer.o
 .ARM.attributes
                0x00000080       0x10 THUMB Debug/../../obj/uart.o
 .ARM.attributes
                0x00000090       0x10 THUMB Debug/../../obj/flash.o
 .ARM.attributes
                0x000000a0       0x10 THUMB Debug/../../obj/assert.o
 .ARM.attributes
                0x000000b0       0x10 THUMB Debug/../../obj/backdoor.o
 .ARM.attributes
                0x000000c0       0x10 THUMB Debug/../../obj/boot.o
 .ARM.attributes
                0x000000d0       0x10 THUMB Debug/../../obj/com.o
 .ARM.attributes
                0x000000e0       0x10 THUMB Debug/../../obj/cop.o
 .ARM.attributes
                0x000000f0       0x10 THUMB Debug/../../obj/xcp.o
 .ARM.attributes
                0x00000100       0x10 C:/Program Files (x86)/Rowley Associates Limited/CrossWorks for ARM 2.1/lib/libdebugio_v7m_t_le.a(libdebugio_asm.o)
 .ARM.attributes
                0x00000110       0x10 C:/Program Files (x86)/Rowley Associates Limited/CrossWorks for ARM 2.1/lib/libc_user_libc_v7m_t_le.a(user_libc.o)

.debug_frame    0x00000000      0x668
 .debug_frame   0x00000000       0x30 THUMB Debug/../../obj/main.o
 .debug_frame   0x00000030       0x20 THUMB Debug/../../obj/vectors.o
 .debug_frame   0x00000050       0x5c THUMB Debug/../../obj/cpu.o
 .debug_frame   0x000000ac       0x6c THUMB Debug/../../obj/nvm.o
 .debug_frame   0x00000118       0x6c THUMB Debug/../../obj/timer.o
 .debug_frame   0x00000184       0x64 THUMB Debug/../../obj/uart.o
 .debug_frame   0x000001e8      0x150 THUMB Debug/../../obj/flash.o
 .debug_frame   0x00000338       0x2c THUMB Debug/../../obj/assert.o
 .debug_frame   0x00000364       0x48 THUMB Debug/../../obj/backdoor.o
 .debug_frame   0x000003ac       0x48 THUMB Debug/../../obj/boot.o
 .debug_frame   0x000003f4       0x94 THUMB Debug/../../obj/com.o
 .debug_frame   0x00000488       0x30 THUMB Debug/../../obj/cop.o
 .debug_frame   0x000004b8       0x70 THUMB Debug/../../obj/xcp.o
 .debug_frame   0x00000528       0xa0 C:/Program Files (x86)/Rowley Associates Limited/CrossWorks for ARM 2.1/lib/libdebugio_v7m_t_le.a(libdebugio_asm.o)
 .debug_frame   0x000005c8       0xa0 C:/Program Files (x86)/Rowley Associates Limited/CrossWorks for ARM 2.1/lib/libc_user_libc_v7m_t_le.a(user_libc.o)

.debug_loc      0x00000000      0xc50
 .debug_loc     0x00000000       0x76 THUMB Debug/../../obj/main.o
 .debug_loc     0x00000076       0xc1 THUMB Debug/../../obj/cpu.o
 .debug_loc     0x00000137       0x7f THUMB Debug/../../obj/nvm.o
 .debug_loc     0x000001b6       0x20 THUMB Debug/../../obj/timer.o
 .debug_loc     0x000001d6      0x105 THUMB Debug/../../obj/uart.o
 .debug_loc     0x000002db      0x6b4 THUMB Debug/../../obj/flash.o
 .debug_loc     0x0000098f       0x46 THUMB Debug/../../obj/assert.o
 .debug_loc     0x000009d5       0x40 THUMB Debug/../../obj/backdoor.o
 .debug_loc     0x00000a15       0x40 THUMB Debug/../../obj/boot.o
 .debug_loc     0x00000a55       0x86 THUMB Debug/../../obj/com.o
 .debug_loc     0x00000adb      0x175 THUMB Debug/../../obj/xcp.o

.debug_aranges  0x00000000      0x330
 .debug_aranges
                0x00000000       0x20 THUMB Debug/../../obj/main.o
 .debug_aranges
                0x00000020       0x20 THUMB Debug/../../obj/cstart.o
 .debug_aranges
                0x00000040       0x20 THUMB Debug/../../obj/vectors.o
 .debug_aranges
                0x00000060       0x30 THUMB Debug/../../obj/cpu.o
 .debug_aranges
                0x00000090       0x40 THUMB Debug/../../obj/nvm.o
 .debug_aranges
                0x000000d0       0x40 THUMB Debug/../../obj/timer.o
 .debug_aranges
                0x00000110       0x30 THUMB Debug/../../obj/uart.o
 .debug_aranges
                0x00000140       0x70 THUMB Debug/../../obj/flash.o
 .debug_aranges
                0x000001b0       0x20 THUMB Debug/../../obj/assert.o
 .debug_aranges
                0x000001d0       0x28 THUMB Debug/../../obj/backdoor.o
 .debug_aranges
                0x000001f8       0x28 THUMB Debug/../../obj/boot.o
 .debug_aranges
                0x00000220       0x48 THUMB Debug/../../obj/com.o
 .debug_aranges
                0x00000268       0x28 THUMB Debug/../../obj/cop.o
 .debug_aranges
                0x00000290       0x40 THUMB Debug/../../obj/xcp.o
 .debug_aranges
                0x000002d0       0x60 C:/Program Files (x86)/Rowley Associates Limited/CrossWorks for ARM 2.1/lib/libc_user_libc_v7m_t_le.a(user_libc.o)

.debug_ranges   0x00000000      0x350
 .debug_ranges  0x00000000       0x10 THUMB Debug/../../obj/main.o
 .debug_ranges  0x00000010       0x10 THUMB Debug/../../obj/vectors.o
 .debug_ranges  0x00000020       0x20 THUMB Debug/../../obj/cpu.o
 .debug_ranges  0x00000040       0x30 THUMB Debug/../../obj/nvm.o
 .debug_ranges  0x00000070       0x48 THUMB Debug/../../obj/timer.o
 .debug_ranges  0x000000b8       0xb0 THUMB Debug/../../obj/uart.o
 .debug_ranges  0x00000168       0x78 THUMB Debug/../../obj/flash.o
 .debug_ranges  0x000001e0       0x10 THUMB Debug/../../obj/assert.o
 .debug_ranges  0x000001f0       0x18 THUMB Debug/../../obj/backdoor.o
 .debug_ranges  0x00000208       0x18 THUMB Debug/../../obj/boot.o
 .debug_ranges  0x00000220       0x38 THUMB Debug/../../obj/com.o
 .debug_ranges  0x00000258       0x18 THUMB Debug/../../obj/cop.o
 .debug_ranges  0x00000270       0x90 THUMB Debug/../../obj/xcp.o
 .debug_ranges  0x00000300       0x50 C:/Program Files (x86)/Rowley Associates Limited/CrossWorks for ARM 2.1/lib/libc_user_libc_v7m_t_le.a(user_libc.o)
